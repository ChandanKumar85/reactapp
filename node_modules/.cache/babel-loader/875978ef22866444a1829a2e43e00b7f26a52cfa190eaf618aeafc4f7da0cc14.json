{"ast":null,"code":"var _jsxFileName = \"/home/chandan.singh/Videos/Learning-React/src/Employee/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button } from '@mui/material';\nimport { DialogBox } from '../genericComponent/DialogBox';\nimport EmployeeForm from './EmployeeForm';\nimport EmployeeList from './EmployeeList/EmployeeList';\n// import shortid from 'shortid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cities = ['delhi', 'mumbai', 'bangalore', 'kolkata', 'pune'];\nconst skills = ['angular', 'react', 'vue', 'nextjs', 'drupal', 'html5', 'css3', 'sass', 'mui', 'material-ui'];\nconst Employee = () => {\n  _s();\n  const [popupModel, setPopupModel] = useState(false);\n  const addEmployeeBtn = () => {\n    setPopupModel(!popupModel);\n  };\n  const [initialValues, setInitialValues] = useState({\n    fullName: '',\n    email: '',\n    contactNumber: '',\n    dateOfBirth: '',\n    city: '',\n    skill: [],\n    gender: '',\n    isActive: ''\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      checked\n    } = e.target;\n    if (name === \"isActive\") {\n      setInitialValues({\n        ...initialValues,\n        [name]: checked\n      });\n    } else {\n      setInitialValues({\n        ...initialValues,\n        [name]: value\n      });\n    }\n  };\n  const validate = values => {\n    var _values$skill;\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n    if (!values.fullName) {\n      errors.fullName = \"This field is required!\";\n    } else if (values.fullName.length < 3) {\n      errors.fullName = \"Name should be minimum 3 character.\";\n    }\n    if (!values.email) {\n      errors.email = \"This field is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email.\";\n    }\n    if (!values.contactNumber) {\n      errors.contactNumber = \"This field is required!\";\n    } else if (values.contactNumber.length < 10) {\n      errors.contactNumber = \"Contact number minimum 10 digits.\";\n    } else if (values.contactNumber.length > 10) {\n      errors.contactNumber = \"Contact number maximum 10 digits.\";\n    }\n    if (!values.dateOfBirth) {\n      errors.dateOfBirth = \"This field is required!\";\n    }\n    if (!values.city) {\n      errors.city = \"This field is required!\";\n    }\n    if (!(values !== null && values !== void 0 && (_values$skill = values.skill) !== null && _values$skill !== void 0 && _values$skill.length)) {\n      errors.skill = \"This field is required!\";\n    }\n    if (!values.gender) {\n      errors.gender = \"This field is required!\";\n    }\n    if (!values.isActive) {\n      errors.isActive = \"This field is required!\";\n    }\n    return errors;\n  };\n  useEffect(() => {\n    // console.log(formErrors)\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(initialValues);\n    }\n  }, [formErrors]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormErrors(validate(initialValues));\n    setIsSubmit(true);\n    if (localStorage.getItem('empList') !== null) {\n      console.log(\"Empty\");\n    } else {\n      console.log(\"Empty\");\n    }\n    // localStorage.setItem('empList', JSON.stringify(initialValues))\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => addEmployeeBtn(),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogBox, {\n        maxWidth: \"md\",\n        title: 'Add Employee',\n        cancelBtn: 'cancel',\n        submitBtn: 'submit',\n        openModal: popupModel,\n        closeModel: addEmployeeBtn,\n        onSubmit: handleSubmit,\n        modelData: /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          cities: cities,\n          skills: skills,\n          errors: formErrors,\n          initialValues: initialValues,\n          handleChange: handleChange\n          // handleBlur={handleBlur}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Employee, \"NtLxkAU1ieTaTi9H9uuABvOo+Xc=\");\n_c = Employee;\nexport default Employee;\n\n// const [empList, setEmpList] = useState(JSON.parse(localStorage.getItem('empList') || ''));\n// {/* <EmployeeList empData={empList} /> */}\nvar _c;\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"names":["React","useState","useEffect","Button","DialogBox","EmployeeForm","EmployeeList","jsxDEV","_jsxDEV","Fragment","_Fragment","cities","skills","Employee","_s","popupModel","setPopupModel","addEmployeeBtn","initialValues","setInitialValues","fullName","email","contactNumber","dateOfBirth","city","skill","gender","isActive","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","name","value","checked","target","validate","values","_values$skill","errors","regex","length","test","Object","keys","console","log","handleSubmit","preventDefault","localStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","maxWidth","title","cancelBtn","submitBtn","openModal","closeModel","onSubmit","modelData","_c","$RefreshReg$"],"sources":["/home/chandan.singh/Videos/Learning-React/src/Employee/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Button } from '@mui/material'\nimport { DialogBox } from '../genericComponent/DialogBox'\nimport EmployeeForm from './EmployeeForm'\nimport EmployeeList from './EmployeeList/EmployeeList';\n// import shortid from 'shortid';\n\nconst cities = ['delhi', 'mumbai', 'bangalore', 'kolkata', 'pune'];\nconst skills = ['angular', 'react', 'vue', 'nextjs', 'drupal', 'html5', 'css3', 'sass', 'mui', 'material-ui'];\n\nconst Employee = () => {\n\n  const [popupModel, setPopupModel] = useState(false)\n  const addEmployeeBtn = () => { setPopupModel(!popupModel) }\n  const [initialValues, setInitialValues] = useState({ \n    fullName: '', \n    email: '', \n    contactNumber: '', \n    dateOfBirth: '', \n    city: '',\n    skill: [],\n    gender: '',\n    isActive: ''\n  });\n\n  const [formErrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit ] = useState(false);\n  \n  \n  const handleChange = (e) => {\n    const {name, value, checked} = e.target; \n    if(name === \"isActive\"){\n      setInitialValues({ ...initialValues, [name]: checked })\n    }\n    else {\n      setInitialValues({ ...initialValues, [name]: value })\n    }\n  }\n  \n  const validate = (values) => {\n    const errors = {};\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.fullName) {\n      errors.fullName = \"This field is required!\"\n    } else if (values.fullName.length < 3) {\n      errors.fullName = \"Name should be minimum 3 character.\"\n    }\n    \n    if (!values.email) {\n      errors.email = \"This field is required!\"\n    }else if (!regex.test(values.email)){\n      errors.email = \"This is not a valid email.\"\n    }\n\n    if (!values.contactNumber) {\n      errors.contactNumber = \"This field is required!\"\n    } else if (values.contactNumber.length < 10){\n      errors.contactNumber = \"Contact number minimum 10 digits.\"\n    } else if (values.contactNumber.length > 10){\n      errors.contactNumber = \"Contact number maximum 10 digits.\"\n    }\n\n    if (!values.dateOfBirth) {\n      errors.dateOfBirth = \"This field is required!\"\n    }\n    \n    if (!values.city) {\n      errors.city = \"This field is required!\"\n    }\n    \n    if (!values?.skill?.length) {\n      errors.skill = \"This field is required!\"\n    }\n    \n    if (!values.gender) {\n      errors.gender = \"This field is required!\"\n    }\n    \n    if (!values.isActive) {\n      errors.isActive = \"This field is required!\"\n    }\n\n    return errors;\n  }\n  \n  useEffect(()=>{\n    // console.log(formErrors)\n    if(Object.keys(formErrors).length === 0 && isSubmit){\n      console.log(initialValues)\n    }\n  }, [formErrors])\n  \n  const handleSubmit = (e) =>{\n    e.preventDefault();\n    setFormErrors(validate(initialValues))\n    setIsSubmit(true)\n    if (localStorage.getItem('empList') !== null) {\n      console.log(\"Empty\")\n    } else {\n      console.log(\"Empty\")\n    }\n    // localStorage.setItem('empList', JSON.stringify(initialValues))\n  }\n  \n  return (\n    <>\n      <div className='d-flex align-items-center justify-content-between'>\n        <h1>Employee List</h1>\n        <Button variant=\"contained\" onClick={()=>addEmployeeBtn()}>Add Employee</Button>\n        <DialogBox\n          maxWidth=\"md\" \n          title={'Add Employee'}\n          cancelBtn={'cancel'}\n          submitBtn={'submit'}\n          openModal={popupModel} \n          closeModel={addEmployeeBtn} \n          onSubmit={handleSubmit}\n          modelData={\n            <EmployeeForm \n            cities={cities}\n            skills={skills}\n            errors={formErrors}\n            initialValues={initialValues}\n            handleChange={handleChange} \n            // handleBlur={handleBlur}\n            />\n          } \n          />\n      </div>\n    </>\n  )\n}\n\nexport default Employee\n\n\n\n\n\n\n\n\n// const [empList, setEmpList] = useState(JSON.parse(localStorage.getItem('empList') || ''));\n// {/* <EmployeeList empData={empList} /> */}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}