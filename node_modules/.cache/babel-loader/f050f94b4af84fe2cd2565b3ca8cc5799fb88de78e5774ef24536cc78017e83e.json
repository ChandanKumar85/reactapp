{"ast":null,"code":"var _jsxFileName = \"/home/chandan.singh/Videos/Learning-React/src/Employee/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { DialogBox } from '../genericComponent/DialogBox';\nimport EmployeeForm from './EmployeeForm';\n// import shortid from 'shortid';\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cities = ['delhi', 'mumbai', 'banglore', 'kolkata', 'pune'];\nconst skills = ['angular', 'react', 'vue', 'nextjs', 'drupal', 'html5', 'css3', 'sass', 'mui', 'material-ui'];\nconst initialValues = {\n  fullName: \"\",\n  email: \"\",\n  contactNumber: \"\",\n  dateOfBirth: \"\",\n  city: \"\",\n  skill: [],\n  gender: \"\",\n  isActive: \"\"\n};\nconst Employee = () => {\n  _s();\n  const {\n    values,\n    handleBlur,\n    handelChange,\n    handelSubmit\n  } = useFormik({\n    initialValues: initialValues,\n    onSubmit: value => {\n      console.log(\"ðŸš€ ~ file: index.js:26 ~ Employee ~ value:\", value);\n    }\n  });\n  const [inputValue, setInputValue] = useState({\n    fullName: \"\",\n    email: \"\",\n    contact: \"\",\n    dob: \"\",\n    city: \"\",\n    skill: [],\n    gender: \"\"\n  });\n\n  // const handelOnChange = (key, value) => {\n  //   setInputValue((prevValue) => ({...prevValue, [key]: value}));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Employee List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => addEmployeeBtn(),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogBox, {\n        maxWidth: \"md\",\n        title: 'Add Employee',\n        openModal: addEmp,\n        closeModel: addEmployeeBtn,\n        handelSubmit: handelSubmit,\n        modelData: /*#__PURE__*/_jsxDEV(EmployeeForm, {\n          cities: cities,\n          skills: skills,\n          inputValue: values,\n          handelChange: handelChange,\n          handleBlur: handleBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Employee, \"HE9bnOqN9qbbiRL67GdeePUgzJE=\", false, function () {\n  return [useFormik];\n});\n_c = Employee;\nexport default Employee;\n\n// if(fullName === '') {\n//   setError({ ...error, fullName: \"This Field is required.\" })\n// }\n// else if(fullName.length <= 2){\n//   setError({ ...error, fullName: \"Please enter minimum 3 charector\" })\n// } else {\n//   setError({ ...error, fullName: false })\n// }\n// console.log(\"ðŸš€ ~ file: index.js:31 ~ handelSubmit ~ event:\", event)\n// Object.keys(inputValue).forEach(key => {\n//   if(inputValue[key]){\n//     console.log(\"Avalable\")\n//   }else {\n//     console.log(\"Not Avalable\")\n//     setError(true)\n//   }\n// })\n// console.log(inputValue.fullName.length)\n// console.log({id:shortid.generate(), ...inputValue})\n// console.log(inputValue)\n\n// let errorsHere\n// Object.keys(inputValue).forEach(key => {\n//   if(inputValue[key] === ''){\n//     setError({...error, [key]: \"This Field is required.\"})\n//     console.log(error)\n//   }\n// else if([key].length <= 2){\n//   errorsHere = { ...errorsHere, [key]: \"Please enter minimum 3 charector\" }\n// }\n// // else if(key === 'email'){\n\n// // }\n// else {\n//   console.log(\"Not Avalable\")\n// }\n// })\n\n// if(fullName === ''){\n//   setError({...error, nameError: 'required'})\n// }\n// else if(email === ''){\n//   setError({...error, emailError: 'sdfghjukl'})\n// }else {\n//   setError({})\n// }\n\n// let errorsHere\n// Object.keys(inputValue).forEach(key => {\n//   if(inputValue[key] === ''){\n//     errorsHere = { ...errorsHere, [key]: \"This Field is required.\" }\n//   }\n//   else if([key].length <= 2){\n//     errorsHere = { ...errorsHere, [key]: \"Please enter minimum 3 charector\" }\n//   }\n//   // else if(key === 'email'){\n\n//   // }\n//   else {\n//     console.log(\"Not Avalable\")\n//   }\n// })\nvar _c;\n$RefreshReg$(_c, \"Employee\");","map":{"version":3,"names":["React","useState","Button","DialogBox","EmployeeForm","useFormik","jsxDEV","_jsxDEV","Fragment","_Fragment","cities","skills","initialValues","fullName","email","contactNumber","dateOfBirth","city","skill","gender","isActive","Employee","_s","values","handleBlur","handelChange","handelSubmit","onSubmit","value","console","log","inputValue","setInputValue","contact","dob","children","className","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","addEmployeeBtn","maxWidth","title","openModal","addEmp","closeModel","modelData","_c","$RefreshReg$"],"sources":["/home/chandan.singh/Videos/Learning-React/src/Employee/index.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button } from '@mui/material'\nimport { DialogBox } from '../genericComponent/DialogBox'\nimport EmployeeForm from './EmployeeForm'\n// import shortid from 'shortid';\nimport { useFormik } from \"formik\";\n\n\nconst cities = ['delhi', 'mumbai', 'banglore', 'kolkata', 'pune'];\nconst skills = ['angular', 'react', 'vue', 'nextjs', 'drupal', 'html5', 'css3', 'sass', 'mui', 'material-ui'];\n\nconst initialValues = {\n  fullName: \"\",\n  email: \"\",\n  contactNumber: \"\",\n  dateOfBirth: \"\", \n  city: \"\",\n  skill: [], \n  gender: \"\",\n  isActive: \"\"\n}\n\nconst Employee = () => {\n\n\n  const {values, handleBlur, handelChange, handelSubmit} = useFormik({\n    initialValues: initialValues,\n    onSubmit : (value) => {\n      console.log(\"ðŸš€ ~ file: index.js:26 ~ Employee ~ value:\", value)\n      \n    }\n  })\n\n  \n  const [inputValue, setInputValue] = useState({\n    fullName: \"\",\n    email: \"\",\n    contact: \"\",\n    dob: \"\",\n    city: \"\",\n    skill: [],\n    gender: \"\"\n  })\n\n  // const handelOnChange = (key, value) => {\n  //   setInputValue((prevValue) => ({...prevValue, [key]: value}));\n  // }\n\n  return (\n    <>\n      <div className='d-flex align-items-center justify-content-between'>\n        <h1>Employee List</h1>\n        <Button variant=\"contained\" onClick={()=>addEmployeeBtn()}>Add Employee</Button>\n        <DialogBox\n          maxWidth=\"md\" \n          title={'Add Employee'} \n          openModal={addEmp} \n          closeModel={addEmployeeBtn} \n          handelSubmit={handelSubmit}\n          modelData={\n            <EmployeeForm \n              cities={cities}\n              skills={skills}\n              inputValue={values}\n              handelChange={handelChange} \n              handleBlur={handleBlur}\n            />\n          } \n        />\n      </div>\n      <ul>\n      {/* {\n        allData.map((data) => (\n          <li key={data.id}>{data.fullName}</li>\n        ))\n      } */}\n        \n      </ul>\n    </>\n  )\n}\n\nexport default Employee\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// if(fullName === '') {\n    //   setError({ ...error, fullName: \"This Field is required.\" })\n    // }\n    // else if(fullName.length <= 2){\n    //   setError({ ...error, fullName: \"Please enter minimum 3 charector\" })\n    // } else {\n    //   setError({ ...error, fullName: false })\n    // }\n    // console.log(\"ðŸš€ ~ file: index.js:31 ~ handelSubmit ~ event:\", event)\n    // Object.keys(inputValue).forEach(key => {\n    //   if(inputValue[key]){\n    //     console.log(\"Avalable\")\n    //   }else {\n    //     console.log(\"Not Avalable\")\n    //     setError(true)\n    //   }\n    // })\n    // console.log(inputValue.fullName.length)\n    // console.log({id:shortid.generate(), ...inputValue})\n    // console.log(inputValue)\n\n\n\n\n\n\n\n\n    // let errorsHere\n    // Object.keys(inputValue).forEach(key => {\n    //   if(inputValue[key] === ''){\n    //     setError({...error, [key]: \"This Field is required.\"})\n    //     console.log(error)\n    //   }\n      // else if([key].length <= 2){\n      //   errorsHere = { ...errorsHere, [key]: \"Please enter minimum 3 charector\" }\n      // }\n      // // else if(key === 'email'){\n        \n      // // }\n      // else {\n      //   console.log(\"Not Avalable\")\n      // }\n    // })\n\n    // if(fullName === ''){\n    //   setError({...error, nameError: 'required'})\n    // }\n    // else if(email === ''){\n    //   setError({...error, emailError: 'sdfghjukl'})\n    // }else {\n    //   setError({})\n    // }\n\n    // let errorsHere\n    // Object.keys(inputValue).forEach(key => {\n    //   if(inputValue[key] === ''){\n    //     errorsHere = { ...errorsHere, [key]: \"This Field is required.\" }\n    //   }\n    //   else if([key].length <= 2){\n    //     errorsHere = { ...errorsHere, [key]: \"Please enter minimum 3 charector\" }\n    //   }\n    //   // else if(key === 'email'){\n        \n    //   // }\n    //   else {\n    //     console.log(\"Not Avalable\")\n    //   }\n    // })"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}