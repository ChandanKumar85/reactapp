{"ast":null,"code":"var _jsxFileName = \"/home/chandan.singh/Documents/react-app/react/src/Components/FormAddEdit/index.js\",\n  _s = $RefreshSig$();\n// import { Box, Button, FormControl, FormHelperText, Grid, InputAdornment, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@mui/material'\n// import React, { useEffect, useState } from 'react'\n// import { DatepickerWrapper } from './formStyled';\n// import dummyImg from '../../assets/dummy-product.png'\n// import axios from 'axios';\n\n// const EmployeeForm = () => {\n//     const formInitialVal = { name: '', email: '', phone: '', age: '', designation: '', avatar: null }\n//     const [imgPreview, setImgPreview] = useState(null);\n//     const [initialValue, setInitialValue] = useState(formInitialVal);\n//     const [formErrors, setFormErrors] = useState({});\n\n//     const validateForm = values => {\n//         const errors = {};\n//         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n//         if (!values.name) {\n//             errors.name = \"This filed is required.\"\n//         } else if (values.name.length < 3) {\n//             errors.name = \"User name should be minimum 3 characters.\"\n//         }\n\n//         if (!values.email) {\n//             errors.email = \"This filed is required.\"\n//         } else if (!emailRegex.test(values.email)) {\n//             errors.email = \"This is not a valid email.\"\n//         }\n\n//         if (!values.phone) {\n//             errors.phone = \"This filed is required.\"\n//         } else if (values.phone.length < 10) {\n//             errors.phone = \"Mobile number should be minimum 10 digits.\"\n//         }\n\n//         if (!values.age) {\n//             errors.age = \"This field is required!\"\n//         }\n\n//         if (!values.designation) {\n//             errors.designation = \"This field is required!\"\n//         }\n\n//         if (!values.avatar) {\n//             errors.avatar = \"This field is required!\"\n//         }\n//         return errors;\n//     }\n\n//     const handleChange = (e) => {\n//         if (!e.target.files) {\n//             const { name, value, type, files } = e.target;\n//             // Special handling for file input (photo)\n//             const fieldValue = type === 'file' ? files[0] : value;\n//             setInitialValue({ ...initialValue, [name]: value })\n//             return;\n//         }\n//         if (e.target.files.length !== 0) {\n//             const reader = new FileReader();\n//             reader.readAsDataURL(e.target.files[0]);\n//             reader.onload = (e) => {\n//                 setImgPreview(e.target.result)\n//                 console.log(e.target.result)\n//             }\n//         } else {\n//             setImgPreview(null)\n//         }\n//     }\n\n//     useEffect(() => {\n//         if (imgPreview !== null) {\n//             setImgPreview(imgPreview)\n//         } else {\n//             setImgPreview(dummyImg)\n//         }\n//     }, [imgPreview])\n\n//     const handleSubmit = () => {\n//         const errors = validateForm(initialValue)\n//         setFormErrors(errors)\n//         console.log(initialValue)\n//         if (Object.keys(errors)?.length) {\n//             return false\n//         }\n//     }\n\n//     // const handleUpload = (e) => {\n//     //     console.log(initialValue)\n//     //     // const selectedFile = e.target.files[0];\n//     //     // const reader = new FileReader();\n//     //     // reader.readAsDataURL(selectedFile);\n//     // };\n\n//     return (\n//         <>\n//             <Box sx={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-between' }}>\n//                 <Typography variant=\"h5\" component=\"h2\">Add Employee</Typography>\n//             </Box>\n//             <Grid container>\n//                 <Grid item xs={4}>\n//                     <form>\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"text\"\n//                             label=\"User Name\"\n//                             name=\"name\"\n//                             autoComplete=\"off\"\n//                             autoFocus\n//                             error={Boolean(formErrors.name)}\n//                             helperText={formErrors.name}\n//                             value={initialValue.name}\n//                             onChange={handleChange}\n//                         />\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"email\"\n//                             label=\"Email Address\"\n//                             name=\"email\"\n//                             autoComplete=\"off\"\n//                             error={Boolean(formErrors.email)}\n//                             helperText={formErrors.email}\n//                             value={initialValue.email}\n//                             onChange={handleChange}\n//                         />\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"phone\"\n//                             label=\"Enter Mobile Number\"\n//                             name=\"phone\"\n//                             autoComplete=\"off\"\n//                             InputProps={{\n//                                 startAdornment: <InputAdornment position='start'>+91</InputAdornment>\n//                             }}\n//                             error={Boolean(formErrors.phone)}\n//                             helperText={formErrors.phone}\n//                             value={initialValue.phone}\n//                             onChange={handleChange}\n//                         />\n\n//                         <DatepickerWrapper>\n//                             <FormControl sx={{ mt: 2 }}>\n//                                 <TextField\n//                                     fullWidth\n//                                     variant='outlined'\n//                                     type='date'\n//                                     autoComplete='off'\n//                                     id='dateOfBirth'\n//                                     name=\"age\"\n//                                     required\n//                                     error={Boolean(formErrors.age)}\n//                                     helperText={formErrors.age}\n//                                     onChange={handleChange}\n//                                 />\n//                             </FormControl>\n//                         </DatepickerWrapper>\n\n//                         <FormControl fullWidth sx={{ mt: 2, minWidth: 100 }}>\n//                             <InputLabel id=\"designation\">Designation</InputLabel>\n//                             <Select\n//                                 labelId=\"designation\"\n//                                 id=\"designation\"\n//                                 name=\"designation\"\n//                                 autoWidth\n//                                 label=\"Designation\"\n//                                 error={Boolean(formErrors.designation)}\n//                                 value={initialValue.designation}\n//                                 onChange={handleChange}\n//                             >\n//                                 <MenuItem value=\"\"><em>Designation</em></MenuItem>\n//                                 <MenuItem value=\"react developer\">React Developer</MenuItem>\n//                                 <MenuItem value='angular developer'>Angular Developer</MenuItem>\n//                                 <MenuItem value='ui developer'>UI Developer</MenuItem>\n//                                 <MenuItem value='java developer'>Java Developer</MenuItem>\n//                                 <MenuItem value='ios developer'>IOS Developer</MenuItem>\n//                                 <MenuItem value='vue developer'>VUE Developer</MenuItem>\n//                                 <MenuItem value='php developer'>PHP Developer</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <FormHelperText className='Mui-error'>{formErrors.designation}</FormHelperText>\n\n//                         <FormControl fullWidth sx={{ mt: 2, minWidth: 100 }}>\n//                             <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n//                                 <img src={imgPreview} width=\"150\" height=\"150\" alt=\"img\" />\n//                                 <Button variant=\"contained\" component=\"label\">\n//                                     Upload\n//                                     <input hidden\n//                                         accept=\"image/*\"\n//                                         type=\"file\"\n//                                         name=\"avatar\"\n//                                         value={initialValue.avatar}\n//                                         onChange={handleChange}\n//                                     />\n//                                 </Button>\n//                             </Stack>\n//                             <FormHelperText className='Mui-error'>{formErrors.avatar}</FormHelperText>\n//                         </FormControl>\n\n//                         <Button\n//                             type=\"button\"\n//                             fullWidth\n//                             variant=\"contained\"\n//                             // disabled={true}\n//                             sx={{ mt: 3, mb: 2 }}\n//                             onClick={handleSubmit}\n//                         >\n//                             Submit\n//                         </Button>\n\n//                     </form>\n//                 </Grid>\n//             </Grid>\n//         </>\n//     )\n// }\n\n// export default EmployeeForm\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { Box, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    age: '',\n    designation: '',\n    avatar: null\n  });\n  const [errors, setErrors] = useState({});\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleAvatarChange = e => {\n    const file = e.target.files[0];\n    setFormData({\n      ...formData,\n      avatar: file\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Perform validation\n    const newErrors = {};\n    if (!formData.name) {\n      newErrors.name = 'Name is required';\n    }\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n    }\n    // Add more validation rules as needed\n\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n    } else {\n      console.log('Form submitted:', formData);\n      // Reset form and errors after submission\n      setFormData({\n        name: '',\n        email: '',\n        phone: '',\n        age: '',\n        designation: '',\n        avatar: null\n      });\n      setErrors({});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleInputChange,\n            error: !!errors.name,\n            helperText: errors.name,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: formData.email,\n            onChange: handleInputChange,\n            error: !!errors.email,\n            helperText: errors.email,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Phone\",\n            name: \"phone\",\n            value: formData.phone,\n            onChange: handleInputChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Age\",\n            name: \"age\",\n            type: \"number\",\n            value: formData.age,\n            onChange: handleInputChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Designation\",\n            name: \"designation\",\n            value: formData.designation,\n            onChange: handleInputChange,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: handleAvatarChange,\n            style: {\n              display: 'none'\n            },\n            id: \"avatarInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatarInput\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              children: \"Upload Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), formData.avatar && /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Avatar\",\n            src: URL.createObjectURL(formData.avatar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(EmployeeForm, \"QDkH8dSdsd9/944jEaDNdoGPlEo=\");\n_c = EmployeeForm;\nexport default EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","TextField","Button","Avatar","Box","Grid","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeForm","_s","formData","setFormData","name","email","phone","age","designation","avatar","errors","setErrors","handleInputChange","e","value","target","handleAvatarChange","file","files","handleSubmit","preventDefault","newErrors","Object","keys","length","console","log","children","sx","display","flexWrap","alignItems","justifyContent","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","container","item","xs","onSubmit","label","onChange","error","helperText","fullWidth","margin","type","accept","style","id","htmlFor","alt","src","URL","createObjectURL","color","_c","$RefreshReg$"],"sources":["/home/chandan.singh/Documents/react-app/react/src/Components/FormAddEdit/index.js"],"sourcesContent":["// import { Box, Button, FormControl, FormHelperText, Grid, InputAdornment, InputLabel, MenuItem, Select, Stack, TextField, Typography } from '@mui/material'\n// import React, { useEffect, useState } from 'react'\n// import { DatepickerWrapper } from './formStyled';\n// import dummyImg from '../../assets/dummy-product.png'\n// import axios from 'axios';\n\n// const EmployeeForm = () => {\n//     const formInitialVal = { name: '', email: '', phone: '', age: '', designation: '', avatar: null }\n//     const [imgPreview, setImgPreview] = useState(null);\n//     const [initialValue, setInitialValue] = useState(formInitialVal);\n//     const [formErrors, setFormErrors] = useState({});\n\n//     const validateForm = values => {\n//         const errors = {};\n//         const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n//         if (!values.name) {\n//             errors.name = \"This filed is required.\"\n//         } else if (values.name.length < 3) {\n//             errors.name = \"User name should be minimum 3 characters.\"\n//         }\n\n//         if (!values.email) {\n//             errors.email = \"This filed is required.\"\n//         } else if (!emailRegex.test(values.email)) {\n//             errors.email = \"This is not a valid email.\"\n//         }\n\n//         if (!values.phone) {\n//             errors.phone = \"This filed is required.\"\n//         } else if (values.phone.length < 10) {\n//             errors.phone = \"Mobile number should be minimum 10 digits.\"\n//         }\n\n//         if (!values.age) {\n//             errors.age = \"This field is required!\"\n//         }\n\n//         if (!values.designation) {\n//             errors.designation = \"This field is required!\"\n//         }\n\n//         if (!values.avatar) {\n//             errors.avatar = \"This field is required!\"\n//         }\n//         return errors;\n//     }\n\n//     const handleChange = (e) => {\n//         if (!e.target.files) {\n//             const { name, value, type, files } = e.target;\n//             // Special handling for file input (photo)\n//             const fieldValue = type === 'file' ? files[0] : value;\n//             setInitialValue({ ...initialValue, [name]: value })\n//             return;\n//         }\n//         if (e.target.files.length !== 0) {\n//             const reader = new FileReader();\n//             reader.readAsDataURL(e.target.files[0]);\n//             reader.onload = (e) => {\n//                 setImgPreview(e.target.result)\n//                 console.log(e.target.result)\n//             }\n//         } else {\n//             setImgPreview(null)\n//         }\n//     }\n\n//     useEffect(() => {\n//         if (imgPreview !== null) {\n//             setImgPreview(imgPreview)\n//         } else {\n//             setImgPreview(dummyImg)\n//         }\n//     }, [imgPreview])\n\n//     const handleSubmit = () => {\n//         const errors = validateForm(initialValue)\n//         setFormErrors(errors)\n//         console.log(initialValue)\n//         if (Object.keys(errors)?.length) {\n//             return false\n//         }\n//     }\n\n//     // const handleUpload = (e) => {\n//     //     console.log(initialValue)\n//     //     // const selectedFile = e.target.files[0];\n//     //     // const reader = new FileReader();\n//     //     // reader.readAsDataURL(selectedFile);\n//     // };\n\n//     return (\n//         <>\n//             <Box sx={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-between' }}>\n//                 <Typography variant=\"h5\" component=\"h2\">Add Employee</Typography>\n//             </Box>\n//             <Grid container>\n//                 <Grid item xs={4}>\n//                     <form>\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"text\"\n//                             label=\"User Name\"\n//                             name=\"name\"\n//                             autoComplete=\"off\"\n//                             autoFocus\n//                             error={Boolean(formErrors.name)}\n//                             helperText={formErrors.name}\n//                             value={initialValue.name}\n//                             onChange={handleChange}\n//                         />\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"email\"\n//                             label=\"Email Address\"\n//                             name=\"email\"\n//                             autoComplete=\"off\"\n//                             error={Boolean(formErrors.email)}\n//                             helperText={formErrors.email}\n//                             value={initialValue.email}\n//                             onChange={handleChange}\n//                         />\n\n//                         <TextField\n//                             margin=\"normal\"\n//                             required\n//                             fullWidth\n//                             id=\"phone\"\n//                             label=\"Enter Mobile Number\"\n//                             name=\"phone\"\n//                             autoComplete=\"off\"\n//                             InputProps={{\n//                                 startAdornment: <InputAdornment position='start'>+91</InputAdornment>\n//                             }}\n//                             error={Boolean(formErrors.phone)}\n//                             helperText={formErrors.phone}\n//                             value={initialValue.phone}\n//                             onChange={handleChange}\n//                         />\n\n//                         <DatepickerWrapper>\n//                             <FormControl sx={{ mt: 2 }}>\n//                                 <TextField\n//                                     fullWidth\n//                                     variant='outlined'\n//                                     type='date'\n//                                     autoComplete='off'\n//                                     id='dateOfBirth'\n//                                     name=\"age\"\n//                                     required\n//                                     error={Boolean(formErrors.age)}\n//                                     helperText={formErrors.age}\n//                                     onChange={handleChange}\n//                                 />\n//                             </FormControl>\n//                         </DatepickerWrapper>\n\n//                         <FormControl fullWidth sx={{ mt: 2, minWidth: 100 }}>\n//                             <InputLabel id=\"designation\">Designation</InputLabel>\n//                             <Select\n//                                 labelId=\"designation\"\n//                                 id=\"designation\"\n//                                 name=\"designation\"\n//                                 autoWidth\n//                                 label=\"Designation\"\n//                                 error={Boolean(formErrors.designation)}\n//                                 value={initialValue.designation}\n//                                 onChange={handleChange}\n//                             >\n//                                 <MenuItem value=\"\"><em>Designation</em></MenuItem>\n//                                 <MenuItem value=\"react developer\">React Developer</MenuItem>\n//                                 <MenuItem value='angular developer'>Angular Developer</MenuItem>\n//                                 <MenuItem value='ui developer'>UI Developer</MenuItem>\n//                                 <MenuItem value='java developer'>Java Developer</MenuItem>\n//                                 <MenuItem value='ios developer'>IOS Developer</MenuItem>\n//                                 <MenuItem value='vue developer'>VUE Developer</MenuItem>\n//                                 <MenuItem value='php developer'>PHP Developer</MenuItem>\n//                             </Select>\n//                         </FormControl>\n//                         <FormHelperText className='Mui-error'>{formErrors.designation}</FormHelperText>\n\n//                         <FormControl fullWidth sx={{ mt: 2, minWidth: 100 }}>\n//                             <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n//                                 <img src={imgPreview} width=\"150\" height=\"150\" alt=\"img\" />\n//                                 <Button variant=\"contained\" component=\"label\">\n//                                     Upload\n//                                     <input hidden\n//                                         accept=\"image/*\"\n//                                         type=\"file\"\n//                                         name=\"avatar\"\n//                                         value={initialValue.avatar}\n//                                         onChange={handleChange}\n//                                     />\n//                                 </Button>\n//                             </Stack>\n//                             <FormHelperText className='Mui-error'>{formErrors.avatar}</FormHelperText>\n//                         </FormControl>\n\n//                         <Button\n//                             type=\"button\"\n//                             fullWidth\n//                             variant=\"contained\"\n//                             // disabled={true}\n//                             sx={{ mt: 3, mb: 2 }}\n//                             onClick={handleSubmit}\n//                         >\n//                             Submit\n//                         </Button>\n\n//                     </form>\n//                 </Grid>\n//             </Grid>\n//         </>\n//     )\n// }\n\n// export default EmployeeForm\n\n\n\n\n\n\n\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport { Box, Grid, Typography } from '@mui/material';\n\nconst EmployeeForm = () => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        age: '',\n        designation: '',\n        avatar: null,\n    });\n\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleAvatarChange = (e) => {\n        const file = e.target.files[0];\n        setFormData({ ...formData, avatar: file });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Perform validation\n        const newErrors = {};\n        if (!formData.name) {\n            newErrors.name = 'Name is required';\n        }\n        if (!formData.email) {\n            newErrors.email = 'Email is required';\n        }\n        // Add more validation rules as needed\n\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n        } else {\n            console.log('Form submitted:', formData);\n            // Reset form and errors after submission\n            setFormData({\n                name: '',\n                email: '',\n                phone: '',\n                age: '',\n                designation: '',\n                avatar: null,\n            });\n            setErrors({});\n        }\n    };\n\n    return (\n        <>\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', alignItems: 'center', justifyContent: 'space-between' }}>\n                <Typography variant=\"h5\" component=\"h2\">Add Employee</Typography>\n            </Box>\n            <Grid container>\n                <Grid item xs={4}>\n                    <form onSubmit={handleSubmit}>\n                        <TextField\n                            label=\"Name\"\n                            name=\"name\"\n                            value={formData.name}\n                            onChange={handleInputChange}\n                            error={!!errors.name}\n                            helperText={errors.name}\n                            fullWidth\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            label=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            value={formData.email}\n                            onChange={handleInputChange}\n                            error={!!errors.email}\n                            helperText={errors.email}\n                            fullWidth\n                            margin=\"normal\"\n                        />\n                        {/* Add more fields as needed */}\n                        <TextField\n                            label=\"Phone\"\n                            name=\"phone\"\n                            value={formData.phone}\n                            onChange={handleInputChange}\n                            fullWidth\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            label=\"Age\"\n                            name=\"age\"\n                            type=\"number\"\n                            value={formData.age}\n                            onChange={handleInputChange}\n                            fullWidth\n                            margin=\"normal\"\n                        />\n                        <TextField\n                            label=\"Designation\"\n                            name=\"designation\"\n                            value={formData.designation}\n                            onChange={handleInputChange}\n                            fullWidth\n                            margin=\"normal\"\n                        />\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleAvatarChange}\n                            style={{ display: 'none' }}\n                            id=\"avatarInput\"\n                        />\n                        <label htmlFor=\"avatarInput\">\n                            <Button variant=\"contained\" component=\"span\">\n                                Upload Avatar\n                            </Button>\n                        </label>\n                        {formData.avatar && (\n                            <Avatar alt=\"Avatar\" src={URL.createObjectURL(formData.avatar)} />\n                        )}\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                            Submit\n                        </Button>\n                    </form>\n                </Grid>\n            </Grid>\n        </>\n    );\n};\n\nexport default EmployeeForm;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAQA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,GAAG,EAAEC,IAAI,EAAEC,UAAU,QA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}